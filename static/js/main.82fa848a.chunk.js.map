{"version":3,"sources":["data/DataAggregator.worker.js","components/Sidenav.js","App.js","components/contexts/SchoolCompare.js","components/contexts/HighSchoolData.js","components/SchoolListing.js","components/SatScoreTable.js","components/InfoDrawer.js","components/SchoolList.js","pages/ListingPage.js","components/ScoresChart.js","components/ScoresTable.js","pages/ComparePage.js","AppRouter.js","serviceWorker.js","index.js"],"names":["module","exports","Worker","__webpack_public_path__","withStyles","theme","toolbarIcon","Object","objectSpread","display","alignItems","justifyContent","padding","mixins","toolbar","drawerPaper","position","whiteSpace","width","transition","transitions","create","easing","sharp","duration","enteringScreen","drawerPaperClose","defineProperty","overflowX","leavingScreen","spacing","unit","breakpoints","up","props","classes","isOpen","onToggle","react_default","a","createElement","Drawer_default","variant","paper","classNames","open","className","IconButton_default","onClick","ChevronLeft_default","Divider_default","List_default","ListItem_default","button","component","Link","to","ListItemIcon_default","Dashboard_default","ListItemText_default","primary","BarChart_default","App","state","drawerOpen","handleDrawerOpen","_this","setState","handleDrawerClose","this","root","CssBaseline_default","AppBar_default","appBar","appBarShift","Toolbar_default","disableGutters","color","aria-label","menuButton","menuButtonHidden","Menu_default","Typography_default","noWrap","title","components_Sidenav","content","appBarSpacer","children","Component","paddingRight","zIndex","drawer","marginLeft","concat","marginRight","flexGrow","height","overflow","SchoolCompareContext","React","createContext","selectedSchools","addSchool","highSchool","removeSchool","isSelected","SchoolCompareConsumer","Consumer","SchoolCompareProvider","_Component","_getPrototypeOf2","classCallCheck","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","dbn","newSelectedSchools","_this$state$selectedS","objectWithoutProperties","console","log","inherits","createClass","key","value","Provider","HighSchoolDataContext","highSchools","HighSchoolDataConsumer","HighSchoolDataProvider","fetchHighSchoolData","_this2","worker","DataAggregator","addEventListener","event","data","postMessage","SchoolListing","_this$props$highSchoo","school_name","city","neighborhood","num_of_sat_test_takers","onMoreInfo","Card_default","CardContent_default","gutterBottom","CardActions_default","Button_default","size","_ref","isAddedToCompare","removeFromCompare","addToCompare","PureComponent","defaultProps","SatScoreTable","readingScore","mathScore","writingScore","label","score","_this$props","_this$props$readingSc","_this$props$mathScore","_this$props$writingSc","scoreList","prepareData","Table_default","TableHead_default","TableRow_default","TableCell_default","numeric","TableBody_default","map","row","i","scope","InfoField","fieldName","_ref$fieldValue","fieldValue","nowrap","InfoDrawer","InfoDrawer_InfoField","location","phone_number","href","website","rel","target","total_students","components_SatScoreTable","sat_critical_reading_avg_score","sat_math_avg_score","sat_writing_avg_score","_ref2","SchoolList","selectedHighSchool","selectHighSchool","bind","assertThisInitialized","closeMoreInfo","Grid_default","container","item","xs","sm","lg","style","wrap","justify","md","xl","components_SchoolListing","moreInfoGrid","components_InfoDrawer","moreInfo","onClose","ListingPage","components_SchoolList","ScoresChart","chartData","entries","forEach","slicedToArray","school","push","name","avgReadingScore","avgMathScore","avgWritingScore","computeChartData","isNoSchoolSelected","keys","react","ResponsiveContainer","chart_BarChart","CartesianGrid","strokeDasharray","XAxis","dataKey","YAxis","Tooltip","Legend","Bar","fill","minPointSize","ScoresTable","schoolData","ComparePage","components_ScoresChart","components_ScoresTable","AppRouter","BrowserRouter","basename","process","HighSchoolData_HighSchoolDataProvider","SchoolCompare_SchoolCompareProvider","src_App","Route","exact","path","Boolean","window","hostname","match","ReactDOM","render","src_AppRouter","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.82fa848a.chunk.js","sourcesContent":["module.exports = function() {\n  return new Worker(__webpack_public_path__ + \"a55cd525b8bffa02f8d3.worker.js\");\n};","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport classNames from 'classnames';\n\nimport { withStyles } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport Divider from '@material-ui/core/Divider';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport IconButton from '@material-ui/core/IconButton';\n\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport DashboardIcon from '@material-ui/icons/Dashboard';\nimport BarChartIcon from '@material-ui/icons/BarChart';\n\nconst drawerWidth = 240;\nconst styles = theme => ({\n  toolbarIcon: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    padding: '0 8px',\n    ...theme.mixins.toolbar,\n  },\n  drawerPaper: {\n    position: 'relative',\n    whiteSpace: 'nowrap',\n    width: drawerWidth,\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  drawerPaperClose: {\n    overflowX: 'hidden',\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    width: theme.spacing.unit * 7,\n    [theme.breakpoints.up('sm')]: {\n      width: theme.spacing.unit * 9,\n    },\n  },\n});\n\nconst Sidenav = props => {\n  const { classes, isOpen, onToggle } = props;\n  return (\n    <Drawer\n      variant=\"permanent\"\n      classes={{\n        paper: classNames(\n          classes.drawerPaper,\n          !isOpen && classes.drawerPaperClose,\n        ),\n      }}\n      open={isOpen}\n    >\n      <div className={classes.toolbarIcon}>\n        <IconButton onClick={onToggle}>\n          <ChevronLeftIcon />\n        </IconButton>\n      </div>\n      <Divider />\n      <List>\n        <ListItem button component={Link} to=\"/\">\n          <ListItemIcon>\n            <DashboardIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"List of High Schools\" />\n        </ListItem>\n        <ListItem button component={Link} to=\"/compare\">\n          <ListItemIcon>\n            <BarChartIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"Compare\" />\n        </ListItem>\n      </List>\n    </Drawer>\n  );\n};\n\nexport default withStyles(styles)(Sidenav);\n","import React, { Component } from 'react';\nimport classNames from 'classnames';\nimport { withStyles } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Typography from '@material-ui/core/Typography';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport AppBar from '@material-ui/core/AppBar';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\n\nimport Sidenav from './components/Sidenav';\n\nconst drawerWidth = 240;\n\nconst styles = theme => ({\n  root: {\n    display: 'flex',\n  },\n  toolbar: {\n    paddingRight: 24, // keep right padding when drawer closed\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarShift: {\n    marginLeft: drawerWidth,\n    width: `calc(100% - ${drawerWidth}px)`,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  menuButton: {\n    marginLeft: 12,\n    marginRight: 36,\n  },\n  menuButtonHidden: {\n    display: 'none',\n  },\n  title: {\n    flexGrow: 1,\n  },\n\n  appBarSpacer: theme.mixins.toolbar,\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing.unit * 3,\n    height: '100vh',\n    overflow: 'auto',\n  },\n});\n\nclass App extends Component {\n  state = {\n    drawerOpen: true,\n  };\n\n  handleDrawerOpen = () => {\n    this.setState({ drawerOpen: true });\n  };\n\n  handleDrawerClose = () => {\n    this.setState({ drawerOpen: false });\n  };\n\n  render() {\n    const { classes } = this.props;\n    return (\n      <div className={classes.root}>\n        <CssBaseline />\n        <AppBar\n          position=\"absolute\"\n          className={classNames(\n            classes.appBar,\n            this.state.drawerOpen && classes.appBarShift,\n          )}\n        >\n          <Toolbar\n            disableGutters={!this.state.drawerOpen}\n            className={classes.toolbar}\n          >\n            <IconButton\n              color=\"inherit\"\n              aria-label=\"Open drawer\"\n              onClick={this.handleDrawerOpen}\n              className={classNames(\n                classes.menuButton,\n                this.state.drawerOpen && classes.menuButtonHidden,\n              )}\n            >\n              <MenuIcon />\n            </IconButton>\n            <Typography\n              component=\"h1\"\n              variant=\"h6\"\n              color=\"inherit\"\n              noWrap\n              className={classes.title}\n            >\n              List of High Schools\n            </Typography>\n          </Toolbar>\n        </AppBar>\n\n        <Sidenav\n          isOpen={this.state.drawerOpen}\n          onToggle={this.handleDrawerClose}\n        />\n\n        <main className={classes.content}>\n          <div className={classes.appBarSpacer} />\n          {/* this is where our \"app\" goes */}\n          {this.props.children}\n        </main>\n      </div>\n    );\n  }\n}\n\nexport default withStyles(styles)(App);\n","import React, { Component } from 'react';\n\nconst SchoolCompareContext = React.createContext({\n  // note(seb): this is where we hold the raw information provided to us\n  selectedSchools: {},\n  addSchool: highSchool => null,\n  removeSchool: highSchool => null,\n  isSelected: highSchool => null,\n});\n\nexport const SchoolCompareConsumer = SchoolCompareContext.Consumer;\n\nexport class SchoolCompareProvider extends Component {\n  state = {\n    selectedSchools: {},\n  };\n\n  addSchool = highSchool => {\n    if (!highSchool || !highSchool.dbn) return;\n\n    const newSelectedSchools = this.state.selectedSchools;\n    newSelectedSchools[highSchool.dbn] = highSchool;\n\n    this.setState({\n      selectedSchools: newSelectedSchools,\n    });\n  };\n\n  removeSchool = highSchool => {\n    if (!highSchool || !highSchool.dbn) return;\n\n    // creating a new object from `selectedSchools` that does not contain the highschool\n    //   passed as a parameter to this function\n    const {\n      [highSchool.dbn]: value,\n      ...selectedSchools\n    } = this.state.selectedSchools;\n    this.setState({\n      selectedSchools,\n    });\n  };\n\n  isSelected = highSchool => {\n    console.log('called');\n    // reasoning: if it can't be added to the list, it can't be selected\n    if (!highSchool || !highSchool.dbn) return false;\n\n    // !! is used to coerce the result (undefined or an object, even if empty)\n    //   to true / false values\n    return !!this.state.selectedSchools[highSchool.dbn];\n  };\n\n  render() {\n    return (\n      <SchoolCompareContext.Provider\n        value={{\n          selectedSchools: this.state.selectedSchools,\n          addSchool: this.addSchool,\n          removeSchool: this.removeSchool,\n          isSelected: this.isSelected,\n        }}\n      >\n        {this.props.children}\n      </SchoolCompareContext.Provider>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport DataAggregator from '../../data/DataAggregator.worker';\n\nconst HighSchoolDataContext = React.createContext({\n  highSchools: [],\n});\n\nexport const HighSchoolDataConsumer = HighSchoolDataContext.Consumer;\n\nexport class HighSchoolDataProvider extends Component {\n  constructor(props) {\n    super(props);\n\n    const highSchools = this.fetchHighSchoolData();\n\n    this.state = {\n      highSchools,\n    };\n  }\n\n  fetchHighSchoolData() {\n    this.worker = new DataAggregator();\n\n    this.worker.addEventListener('message', event => {\n      const highSchools = event.data;\n      this.setState({\n        highSchools,\n      });\n    });\n\n    // Treating it as close to a fetch as possible\n    this.worker.postMessage('Fetch HighSchools');\n    // note(seb): ^ the message doesn't really matter as\n    //            we're not checking for its content\n  }\n\n  render() {\n    return (\n      <HighSchoolDataContext.Provider\n        value={{\n          highSchools: this.state.highSchools,\n        }}\n      >\n        {this.props.children}\n      </HighSchoolDataContext.Provider>\n    );\n  }\n}\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\n\nimport { SchoolCompareConsumer } from './contexts/SchoolCompare';\n\nclass SchoolListing extends PureComponent {\n  render() {\n    // other details i've considered: phone number? listing the avg score directly on the tile?\n    const {\n      school_name,\n      city,\n      neighborhood,\n      dbn,\n      num_of_sat_test_takers,\n    } = this.props.highSchool;\n    const { onMoreInfo } = this.props;\n\n    const moreInfo = () => {\n      onMoreInfo(this.props.highSchool);\n    };\n\n    const addToCompare = addSchool => {\n      this.props.highSchool.isAddedToCompare = true;\n      addSchool(this.props.highSchool);\n    };\n\n    const removeFromCompare = removeSchool => {\n      this.props.highSchool.isAddedToCompare = false;\n      removeSchool(this.props.highSchool);\n    };\n\n    return (\n      <Card>\n        <CardContent>\n          <Typography color=\"textSecondary\" gutterBottom>\n            {dbn}\n          </Typography>\n          <Typography noWrap variant=\"h5\" component=\"h2\">\n            {school_name}\n          </Typography>\n          <Typography noWrap color=\"textSecondary\" gutterBottom>\n            {`${city}, ${neighborhood}`}\n          </Typography>\n          <br />\n          <Typography variant=\"body1\" component=\"p\">\n            {`${num_of_sat_test_takers} students have taken the SAT`}\n          </Typography>\n        </CardContent>\n        <CardActions>\n          <Button size=\"small\" onClick={moreInfo}>\n            More info\n          </Button>\n\n          <SchoolCompareConsumer>\n            {({ addSchool, removeSchool }) =>\n              this.props.highSchool.isAddedToCompare ? (\n                <Button\n                  size=\"small\"\n                  onClick={() => removeFromCompare(removeSchool)}\n                >\n                  Remove from compare\n                </Button>\n              ) : (\n                <Button size=\"small\" onClick={() => addToCompare(addSchool)}>\n                  Add to compare\n                </Button>\n              )\n            }\n          </SchoolCompareConsumer>\n        </CardActions>\n      </Card>\n    );\n  }\n}\n\nSchoolListing.propTypes = {\n  classes: PropTypes.object.isRequired,\n  highSchool: PropTypes.object.isRequired,\n};\n\nSchoolListing.defaultProps = {\n  classes: {},\n  highSchool: {},\n};\n\nexport default SchoolListing;\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\n\nimport Table from '@material-ui/core/Table';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableRow from '@material-ui/core/TableRow';\n\nclass SatScoreTable extends PureComponent {\n  prepareData(readingScore, mathScore, writingScore) {\n    return [\n      {\n        label: 'Critical Reading',\n        score: readingScore,\n      },\n      {\n        label: 'Math',\n        score: mathScore,\n      },\n      {\n        label: 'Writing',\n        score: writingScore,\n      },\n    ];\n  }\n\n  render() {\n    const {\n      readingScore = 'N/A',\n      mathScore = 'N/A',\n      writingScore = 'N/A',\n    } = this.props;\n\n    const scoreList = this.prepareData(readingScore, mathScore, writingScore);\n\n    return (\n      <Table>\n        <TableHead>\n          <TableRow>\n            <TableCell>Subject Name</TableCell>\n            <TableCell numeric>Average Score</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {scoreList.map((row, i) => {\n            return (\n              <TableRow key={i}>\n                <TableCell component=\"th\" scope=\"row\">\n                  {row.label}\n                </TableCell>\n                <TableCell numeric>{row.score}</TableCell>\n              </TableRow>\n            );\n          })}\n        </TableBody>\n      </Table>\n    );\n  }\n}\n\nSatScoreTable.propTypes = {\n  readingScore: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n    .isRequired,\n  mathScore: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n    .isRequired,\n  writingScore: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n    .isRequired,\n};\n\nSatScoreTable.defaultProps = {\n  readingScore: 'N/A',\n  mathScore: 'N/A',\n  writingScore: 'N/A',\n};\n\nexport default SatScoreTable;\n","import React, { PureComponent } from 'react';\n\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardActions from '@material-ui/core/CardActions';\n\nimport SatScoreTable from './SatScoreTable';\nimport { SchoolCompareConsumer } from './contexts/SchoolCompare';\n\nconst InfoField = ({ fieldName, fieldValue = 'N/A' }) => (\n  <div>\n    <Typography color=\"textSecondary\" variant=\"subtitle1\">\n      {fieldName}\n    </Typography>\n    <Typography nowrap=\"nowrap\" variant=\"h6\">\n      {fieldValue}\n    </Typography>\n    <br />\n  </div>\n);\n\nclass InfoDrawer extends PureComponent {\n  render() {\n    const { highSchool } = this.props;\n\n    const addToCompare = addSchool => {\n      this.props.highSchool.isAddedToCompare = true;\n      addSchool(highSchool);\n    };\n\n    const removeFromCompare = removeSchool => {\n      this.props.highSchool.isAddedToCompare = false;\n      removeSchool(highSchool);\n    };\n\n    // things I would've added and customised if I had more time:\n    //\n    // subway -> a nice component highlighting the colors of the lines\n    //\n    // busses -> chips with each bus line\n    //\n    // requirements -> listing nicely\n    //\n    // admission priorities -> this could expand into a whole new area\n    //                         to compare between schools\n\n    return (\n      <Card className={this.props.className}>\n        <CardContent>\n          <Typography color=\"textSecondary\" gutterBottom>\n            {highSchool.dbn}\n          </Typography>\n          <Typography variant=\"h5\" component=\"h2\">\n            {highSchool.school_name}\n          </Typography>\n\n          <br />\n          <hr />\n          <br />\n\n          <InfoField fieldName={'Address'} fieldValue={highSchool.location} />\n          <InfoField fieldName={'Phone'} fieldValue={highSchool.phone_number} />\n          <InfoField\n            fieldName={'Website'}\n            fieldValue={\n              <a\n                nowrap=\"nowrap\"\n                href={`https://${highSchool.website}`}\n                rel=\"noopener noreferrer\"\n                target=\"_blank\"\n              >\n                {highSchool.website}\n              </a>\n            }\n          />\n\n          <br />\n          <hr />\n          <br />\n\n          <InfoField\n            fieldName={'Total Students'}\n            fieldValue={highSchool.total_students}\n          />\n          <InfoField\n            fieldName={'# of students who took the SAT'}\n            fieldValue={highSchool.num_of_sat_test_takers}\n          />\n\n          <SatScoreTable\n            readingScore={highSchool.sat_critical_reading_avg_score}\n            mathScore={highSchool.sat_math_avg_score}\n            writingScore={highSchool.sat_writing_avg_score}\n          />\n        </CardContent>\n        <CardActions>\n          <SchoolCompareConsumer>\n            {({ addSchool, removeSchool }) =>\n              highSchool.isAddedToCompare ? (\n                <Button\n                  size=\"small\"\n                  onClick={() => removeFromCompare(removeSchool)}\n                >\n                  Remove from compare\n                </Button>\n              ) : (\n                <Button size=\"small\" onClick={() => addToCompare(addSchool)}>\n                  Add to compare\n                </Button>\n              )\n            }\n          </SchoolCompareConsumer>\n        </CardActions>\n      </Card>\n    );\n  }\n}\n\nexport default InfoDrawer;\n","import React, { Component } from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\n\nimport SchoolListing from './SchoolListing';\nimport InfoDrawer from './InfoDrawer';\n\nconst styles = theme => ({\n  root: {\n    flexGrow: 1,\n  },\n  moreInfoGrid: {\n    position: 'relative',\n  },\n  moreInfo: {\n    position: 'fixed',\n    marginRight: '32px',\n  },\n});\n\nclass SchoolList extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      selectedHighSchool: null,\n    };\n\n    this.selectHighSchool = this.selectHighSchool.bind(this);\n    this.closeMoreInfo = this.closeMoreInfo.bind(this);\n  }\n\n  selectHighSchool(selectedHighSchool) {\n    this.setState({\n      selectedHighSchool,\n    });\n  }\n\n  closeMoreInfo() {\n    this.setState({\n      // note(seb): i know this is a topic for debate, have no strong opinion but\n      //            using `null` here since `undefined` is the value that a variable gets\n      //            before any value has been assigned to it\n      selectedHighSchool: null,\n    });\n  }\n\n  render() {\n    const { highSchools = [] } = this.props;\n\n    return (\n      <Grid container className={this.props.classes.root} spacing={16}>\n        <Grid item xs={12} sm={12} lg={this.state.selectedHighSchool ? 9 : 12}>\n          <Grid\n            style={{ overflow: 'auto' }}\n            container\n            wrap=\"wrap\"\n            justify=\"center\"\n            spacing={16}\n          >\n            {highSchools.map((highSchool, i) => (\n              <Grid key={i} xs={12} sm={12} md={4} xl={3} item>\n                <SchoolListing\n                  highSchool={highSchool}\n                  onMoreInfo={this.selectHighSchool}\n                />\n              </Grid>\n            ))}\n          </Grid>\n        </Grid>\n\n        {this.state.selectedHighSchool ? (\n          <Grid\n            className={this.props.classes.moreInfoGrid}\n            item\n            xs={12}\n            sm={12}\n            md={3}\n            xl={3}\n          >\n            <InfoDrawer\n              className={this.props.classes.moreInfo}\n              highSchool={this.state.selectedHighSchool}\n              onClose={this.state.closeMoreInfo}\n            />\n          </Grid>\n        ) : (\n          ''\n        )}\n      </Grid>\n    );\n  }\n}\n\n// note(seb): i generally prefer render props as a pattern but this is how this\n//            particular ui toolkit is used\nexport default withStyles(styles)(SchoolList);\n","import React, { PureComponent } from 'react';\n\nimport { HighSchoolDataConsumer } from '../components/contexts/HighSchoolData';\nimport SchoolList from '../components/SchoolList';\n\nclass ListingPage extends PureComponent {\n  render() {\n    return (\n      <HighSchoolDataConsumer>\n        {({ highSchools }) => <SchoolList highSchools={highSchools} />}\n      </HighSchoolDataConsumer>\n    );\n  }\n}\n\nexport default ListingPage;\n","import React, { PureComponent, Fragment } from 'react';\nimport {\n  ResponsiveContainer,\n  BarChart,\n  Bar,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  Legend,\n} from 'recharts';\n\nclass ScoresChart extends PureComponent {\n  computeChartData(selectedSchools) {\n    if (!selectedSchools || selectedSchools === {}) return [];\n\n    const chartData = [];\n    Object.entries(selectedSchools).forEach(([dbn, school]) => {\n      chartData.push({\n        name: school.school_name,\n        avgReadingScore: school.sat_critical_reading_avg_score,\n        avgMathScore: school.sat_math_avg_score,\n        avgWritingScore: school.sat_writing_avg_score,\n      });\n    });\n\n    return chartData;\n  }\n\n  render() {\n    const data = this.computeChartData(this.props.selectedSchools);\n    const isNoSchoolSelected =\n      Object.keys(this.props.selectedSchools).length === 0;\n    return (\n      <Fragment>\n        {isNoSchoolSelected ? <div>You have no schools selected</div> : ''}\n        <ResponsiveContainer width=\"95%\" height={430}>\n          <BarChart data={data}>\n            <CartesianGrid strokeDasharray=\"3 3\" />\n            <XAxis dataKey=\"name\" />\n            <YAxis />\n            <Tooltip />\n            <Legend />\n            <Bar\n              dataKey=\"avgReadingScore\"\n              fill=\"#1976d2\"\n              name=\"Average Reading Score\"\n              minPointSize={3}\n            />\n            <Bar\n              dataKey=\"avgMathScore\"\n              fill=\"#63a4ff\"\n              name=\"Averate Math Score\"\n              minPointSize={3}\n            />\n            <Bar\n              dataKey=\"avgWritingScore\"\n              fill=\"#004ba0\"\n              name=\"Averate Writing Score\"\n              minPointSize={3}\n            />\n          </BarChart>\n        </ResponsiveContainer>\n      </Fragment>\n    );\n  }\n}\n\nexport default ScoresChart;\n","import React, { PureComponent } from 'react';\n\nimport Table from '@material-ui/core/Table';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableRow from '@material-ui/core/TableRow';\n\nclass ScoresTable extends PureComponent {\n  render() {\n    const schoolData = [];\n\n    // note(seb): this is really ugly, but to speed things up i chose to write a\n    //            transformer here that is really similar to the one in ScoresChart,\n    //            even though I probably could've found a prettier solution\n    Object.entries(this.props.selectedSchools).forEach(([dbn, school]) => {\n      schoolData.push({\n        name: school.school_name,\n        avgReadingScore: school.sat_critical_reading_avg_score,\n        avgMathScore: school.sat_math_avg_score,\n        avgWritingScore: school.sat_writing_avg_score,\n      });\n    });\n\n    return (\n      <Table>\n        <TableHead>\n          <TableRow>\n            <TableCell>High School Name</TableCell>\n            <TableCell numeric>Average Reading Score</TableCell>\n            <TableCell numeric>Average Math Score</TableCell>\n            <TableCell numeric>Average Writing Score</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {schoolData.map((school, i) => {\n            return (\n              <TableRow key={i}>\n                <TableCell component=\"th\" scope=\"row\">\n                  {school.name}\n                </TableCell>\n                <TableCell numeric>{school.avgReadingScore}</TableCell>\n                <TableCell numeric>{school.avgMathScore}</TableCell>\n                <TableCell numeric>{school.avgWritingScore}</TableCell>\n              </TableRow>\n            );\n          })}\n        </TableBody>\n      </Table>\n    );\n  }\n}\n\nexport default ScoresTable;\n","import React, { PureComponent, Fragment } from 'react';\nimport { SchoolCompareConsumer } from '../components/contexts/SchoolCompare';\nimport ScoresChart from '../components/ScoresChart';\nimport ScoresTable from '../components/ScoresTable';\n\nclass ComparePage extends PureComponent {\n  render() {\n    return (\n      <SchoolCompareConsumer>\n        {({ selectedSchools }) => (\n          <Fragment>\n            <ScoresChart selectedSchools={selectedSchools} />\n            <br />\n            <ScoresTable selectedSchools={selectedSchools} />\n          </Fragment>\n        )}\n      </SchoolCompareConsumer>\n    );\n  }\n}\n\nexport default ComparePage;\n","import React from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\n\nimport App from './App';\nimport { SchoolCompareProvider } from './components/contexts/SchoolCompare';\nimport { HighSchoolDataProvider } from './components/contexts/HighSchoolData';\nimport ListingPage from './pages/ListingPage';\nimport ComparePage from './pages/ComparePage';\n\nconst AppRouter = () => {\n  return (\n    <Router basename={process.env.PUBLIC_URL}>\n      <HighSchoolDataProvider>\n        <SchoolCompareProvider>\n          <App>\n            <Route exact path=\"/\" component={ListingPage} />\n            <Route path=\"/compare\" component={ComparePage} />\n          </App>\n        </SchoolCompareProvider>\n      </HighSchoolDataProvider>\n    </Router>\n  );\n};\n\nexport default AppRouter;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n    ),\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA',\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.',\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.',\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport AppRouter from './AppRouter';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<AppRouter />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}