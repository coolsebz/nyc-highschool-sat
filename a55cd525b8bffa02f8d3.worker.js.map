{"version":3,"sources":["../webpack/bootstrap","data/DataAggregator.worker.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","__webpack_exports__","aggregator","_highschools_json__WEBPACK_IMPORTED_MODULE_0__","_sat_scores_json__WEBPACK_IMPORTED_MODULE_1__","highSchools","satScores","map","highSchool","schoolScores","dbn","find","schoolScore","getScoresByDbn","num_of_sat_test_takers","sat_critical_reading_avg_score","sat_math_avg_score","sat_writing_avg_score","self","addEventListener","e","postMessage"],"mappings":"aACA,IAAAA,EAAA,GAGA,SAAAC,EAAAC,GAGA,GAAAF,EAAAE,GACA,OAAAF,EAAAE,GAAAC,QAGA,IAAAC,EAAAJ,EAAAE,GAAA,CACAG,EAAAH,EACAI,GAAA,EACAH,QAAA,IAUA,OANAI,EAAAL,GAAAM,KAAAJ,EAAAD,QAAAC,IAAAD,QAAAF,GAGAG,EAAAE,GAAA,EAGAF,EAAAD,QAKAF,EAAAQ,EAAAF,EAGAN,EAAAS,EAAAV,EAGAC,EAAAU,EAAA,SAAAR,EAAAS,EAAAC,GACAZ,EAAAa,EAAAX,EAAAS,IACAG,OAAAC,eAAAb,EAAAS,EAAA,CAA0CK,YAAA,EAAAC,IAAAL,KAK1CZ,EAAAkB,EAAA,SAAAhB,GACA,qBAAAiB,eAAAC,aACAN,OAAAC,eAAAb,EAAAiB,OAAAC,YAAA,CAAwDC,MAAA,WAExDP,OAAAC,eAAAb,EAAA,cAAiDmB,OAAA,KAQjDrB,EAAAsB,EAAA,SAAAD,EAAAE,GAEA,GADA,EAAAA,IAAAF,EAAArB,EAAAqB,IACA,EAAAE,EAAA,OAAAF,EACA,KAAAE,GAAA,kBAAAF,QAAAG,WAAA,OAAAH,EACA,IAAAI,EAAAX,OAAAY,OAAA,MAGA,GAFA1B,EAAAkB,EAAAO,GACAX,OAAAC,eAAAU,EAAA,WAAyCT,YAAA,EAAAK,UACzC,EAAAE,GAAA,iBAAAF,EAAA,QAAAM,KAAAN,EAAArB,EAAAU,EAAAe,EAAAE,EAAA,SAAAA,GAAgH,OAAAN,EAAAM,IAAqBC,KAAA,KAAAD,IACrI,OAAAF,GAIAzB,EAAA6B,EAAA,SAAA1B,GACA,IAAAS,EAAAT,KAAAqB,WACA,WAA2B,OAAArB,EAAA,SAC3B,WAAiC,OAAAA,GAEjC,OADAH,EAAAU,EAAAE,EAAA,IAAAA,GACAA,GAIAZ,EAAAa,EAAA,SAAAiB,EAAAC,GAAsD,OAAAjB,OAAAkB,UAAAC,eAAA1B,KAAAuB,EAAAC,IAGtD/B,EAAAkC,EAAA,uBAIAlC,IAAAmC,EAAA,w/97DClFAnC,EAAAkB,EAAAkB,GAAApC,EAAAU,EAAA0B,EAAA,+BAAAC,IAAA,IAAAC,EAAAtC,EAAA,GAAAuC,EAAAvC,EAAA,GASA,MAOOqC,EAAA,CAAAG,EAAAC,KA4BP,OA3BAD,EAAAE,IAAAC,IACA,MAAAC,EATA,EAAAH,EAAAI,IACAJ,EAAAK,KAAAC,KAAAF,UAAA,GAQAG,CAAAP,EAAAE,EAAAE,KAGA,IAAAI,uBACAA,EAAA,MAAAC,+BACAA,EAAA,MAAAC,mBACAA,EAAA,MAAAC,sBACAA,EAAA,OACKR,EASL,MANA,MAAAK,MAAA,OACA,MAAAC,IACAA,EAAA,OACA,MAAAC,MAAA,OACA,MAAAC,MAAA,OAEA,CACAH,yBACAC,iCACAC,qBACAC,2BACAT,MAQAU,KAAAC,iBAAA,UAAAC,IACAA,GACAC,YAAAnB,EAAyBC,EAAaC","file":"a55cd525b8bffa02f8d3.worker.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/nyc-highschool-sat/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 2);\n","import HighSchools from './highschools.json';\nimport SatScores from './sat-scores.json';\n\n// note(seb): quite a naive way of searching through the list of sat scores, so some disclaimers\n//      - in a real production env I would have this list somewhere, indexed by the `dbn` value\n//      - if really necessary to keep this in JS, I would transform it in an object so that I can use\n//          the `dbn` as they key (eg: `transformedSats[dbn]` returns all the information\n//      - even here, i can see that the list is ordered so i could be smart and apply binary search or\n//          something like KMP but decided to go with the most readable solution for now:\nconst getScoresByDbn = (satScores, dbn) => {\n  return satScores.find(schoolScore => schoolScore.dbn === dbn) || {};\n};\n\n// note(seb): separated the aggregator logic into a function that takes highschools and scores so that\n//            tests can be written that are only concerned with the logic, although in production,\n//            i would probably try to spend a bit more time and find a way to mock the whole worker interface\nexport const aggregator = (highSchools, satScores) => {\n  const highSchoolsWithSats = highSchools.map(highSchool => {\n    const schoolScores = getScoresByDbn(satScores, highSchool.dbn);\n\n    // `let` and not `const` because in the next block i end up changing some values\n    let {\n      num_of_sat_test_takers = 'N/A',\n      sat_critical_reading_avg_score = 'N/A',\n      sat_math_avg_score = 'N/A',\n      sat_writing_avg_score = 'N/A',\n    } = schoolScores;\n\n    // crude solution but some schools have `s` as their entry, and here I'm \"cleaning up\" the data\n    if (num_of_sat_test_takers === 's') num_of_sat_test_takers = 'N/A';\n    if (sat_critical_reading_avg_score === 's')\n      sat_critical_reading_avg_score = 'N/A';\n    if (sat_math_avg_score === 's') sat_math_avg_score = 'N/A';\n    if (sat_writing_avg_score === 's') sat_writing_avg_score = 'N/A';\n\n    return {\n      num_of_sat_test_takers,\n      sat_critical_reading_avg_score,\n      sat_math_avg_score,\n      sat_writing_avg_score,\n      ...highSchool,\n    };\n  });\n\n  return highSchoolsWithSats;\n};\n\n// eslint-disable-next-line no-restricted-globals\nself.addEventListener('message', e => {\n  if (!e) return;\n  postMessage(aggregator(HighSchools, SatScores));\n});\n"],"sourceRoot":""}